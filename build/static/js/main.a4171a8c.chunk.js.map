{"version":3,"sources":["features/counter/Counter.module.css","features/counterSlice.js","axios.js","Requests.js","Banner.js","Nav.js","HomeScreen.js","Row.js","App.js","app/store.js","index.js"],"names":["module","exports","counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","instance","axios","create","baseURL","API_KEY","requests","fetchNetflixOriginals","fetchHorrorMovies","fetchActionMovies","fetchTrending","fetchRumanceMovie","Banner","string","n","useState","movie","setmovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchdata","className","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","original_title","original_name","overview","substr","Nav","show","handleShow","tranctionNavBar","window","scrollY","addEventListener","removeEventListener","src","alt","HomeScreen","Row","title","FetchUrl","isLargeRow","movies","setmovies","fetchData","map","console","log","App","configureStore","reducer","counter","counterReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.a4171a8c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import axios from \"axios\";\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n});\r\n\r\nexport default instance;\r\n\r\n// https://api.themoviedb.org/3/trending/all/week?api_key=2a75ae9da341516d03368a04664fab15&language=en-US\r\n","const API_KEY = \"2a75ae9da341516d03368a04664fab15\";\r\n\r\nconst requests = {\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchRumanceMovie: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n};\r\n\r\nexport default requests;\r\n","import axios from \"./axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Banner.css\";\r\nimport requests from \"./Requests\";\r\nfunction Banner() {\r\n  const [movie, setmovie] = useState([]);\r\n  function truncate(string, n) {\r\n    return string?.length > n ? string.substr(0, n) + \"...\" : string;\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchdata() {\r\n      const request = await axios.get(requests.fetchTrending);\r\n      setmovie(\r\n        request.data.results[\r\n          Math.floor(\r\n            Math.floor(Math.random() * request.data.results.length - 1)\r\n          )\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchdata();\r\n  }, []);\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center\",\r\n        backgroundSize: \"100% 100%\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner_title\">\r\n          {movie?.original_title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">Add To Cart</button>\r\n        </div>\r\n        <h5 className=\"banner__description\">\r\n          {truncate(movie?.overview, 150)}\r\n        </h5>\r\n      </div>\r\n      <div className=\"nithu\"></div>\r\n\r\n    </header>\r\n  );\r\n}\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./Nav.css\";\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n\r\n  const tranctionNavBar = () => {\r\n    if (window.scrollY > 220) {\r\n      handleShow(true);\r\n    } else {\r\n      handleShow(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", tranctionNavBar);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", tranctionNavBar);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"}`}>\r\n      <div className=\"nav_contents\">\r\n        <img\r\n          className=\"nav_logo\"\r\n          src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n          alt=\"\"\r\n        ></img>\r\n\r\n        <img\r\n          className=\"nav_avatar\"\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n          alt=\"\"\r\n        ></img>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport Banner from \"./Banner\";\r\nimport \"./HomeScreen.css\";\r\nimport Nav from \"./Nav\";\r\nfunction HomeScreen() {\r\n  return (\r\n    <div className=\"homeScreen\">\r\n      <Nav />\r\n      <Banner />\r\n      {/* movies row  */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import axios from \"./axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Row.css\";\r\nfunction Row({ title, FetchUrl, isLargeRow = false}) {\r\n  const [movies, setmovies] = useState([]);\r\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(FetchUrl);\r\n      setmovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [FetchUrl]);\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            className={`row__poster ${isLargeRow && \"row_largrporster\"}`}\r\n            src={`${base_url}${movie.backdrop_path}`}\r\n          ></img>\r\n        ))}\r\n      </div>\r\n      {console.log(isLargeRow)}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\nimport { Counter } from \"./features/counter/Counter\";\r\nimport \"./App.css\";\r\nimport HomeScreen from \"./HomeScreen\";\r\nimport requests from \"./Requests\";\r\nimport Row from \"./Row\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <HomeScreen />\r\n      <Row\r\n        title=\"NETFLIX ORIGINAL\"\r\n        FetchUrl={requests.fetchNetflixOriginals}\r\n        isLargeRow\r\n      ></Row>\r\n\r\n      <Row title=\"HorrorMovies\" FetchUrl={requests.fetchHorrorMovies}></Row>\r\n\r\n      <Row title=\"Trending\" FetchUrl={requests.fetchTrending}></Row>\r\n\r\n      <Row title=\"RumanceMovie\" FetchUrl={requests.fetchRumanceMovie}></Row>\r\n\r\n      <Row title=\"ActionMovies\" FetchUrl={requests.fetchActionMovies}></Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}